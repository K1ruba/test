trigger:
  branches:
    include:
      - main

variables:
  imageName: 'apache-app'
  acrName: 'testingac'
  acrLoginServer: 'testingac.azurecr.io'
  tag: '$(Build.BuildId)'
  imageFullName: '$(acrLoginServer)/$(imageName):$(tag)'

stages:
  - stage: BuildAndPush
    displayName: Build and Push Docker Image
    jobs:
      - job: BuildAndPush
        pool:
          name: Default
        steps:
          - checkout: self
          - task: Docker@2
            displayName: Build and Push to ACR
            inputs:
              containerRegistry: 'container'   # Your ACR service connection name
              repository: 'apache-app'
              command: 'buildAndPush'
              Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
              tags: |
                $(Build.BuildId)
          - publish: $(Build.SourcesDirectory)/deployment.yaml
          - publish: $(Build.SourcesDirectory)/service.yaml 

  # - stage: Deploy
  #   displayName: Deploy to Kubernetes
  #   dependsOn: BuildAndPush
  #   jobs:
  #     - job: DeployToK8s
  #       displayName: Deploy to AKS
  #       pool:
  #         name: Default  
  #       steps:
  #         - task: KubernetesManifest@1
  #           displayName: Deploy to AKS
  #           inputs:
  #             action: deploy
  #             kubernetesServiceConnection: 'yuno'
  #             namespace: default
  #             manifests: |
  #               $(Build.SourcesDirectory)/deployment.yaml
  #               $(Build.SourcesDirectory)/service.yaml
  #             containers: |
  #               $(imageFullName)

